1. 컬렉션 프레임웍(Collection FrameWork)
데이터 군을 저장하는 클래스드을 표준화한 설계

1.1 컬렉션 프레임웍의 핵심 인터페이스
컬렉션 프레임웍에서는 컬렉션데이터 그룹을 크게 3가지 타입이 존재한다고 인식하고 각 컬레션을 다루는데 필요한 기능을 가진 3개의 인터페이스를 정의하였다. 

그리고 인터페이스 List와 Set의 공통된 부분을 다시 뽑아서 새로운 인터페이스인 Collection을 추가로 정의하였ㅇ다. 

인터페이스	특징
List		순서가 있는 데이터 집합, 데이터의 중복을 허용한다. 
		ArrayList , LinkedList, Stack, Vector 등
Set		순서를 유지하지 않는 데이터의 집합, 데이터의 중복을 허용하지 않는다. 
		HashSet, TreeSet 등
Map		키와 값의 쌍으로 이루어진 데이터의 집합, 순서는 유지되지 않으며, 키는 중복을 허용하지 않고, 값은 중복을 허용한다. 
		HashMap, TreeMap, Hashtable, Properties등

Collection인터페이스
List와 Set의 조상인 Collection 인터페이스에는 다음과 같은 메서드들이 정의되어 있다. 

메서드				설명
boolean add(Object o)		지정된 객체(o) 또는 Collection(c) 의 객체들을 Collection에 추가한다. 
void clear()			Collection의 모든 객체를 삭제한다. 
boolean contains(Object o)	지정된 객체(o) 또는 Collection 객체들이 Collection에 포함되어 있는지 확인한다. 
boolean containsAll(Collection c)
boolean equals(Object o)	동일한 Collection인지 비교
int hashCode()			Collection의 hash code를 반환한다. 
boolean isEmpty()		Collection이 비어 있는지 확인한다. 
Iterator iterator()		Collection의 Iterator를 얻어서 반환한다
boolean remove(Object o)	지적된 객체를 삭제한다. 
boolean removeAll(Collection c) 지정된 Collection에 포함된 객체를 삭제한다.
boolean retainAll(Coolection c)	지정된 Collection에 포함된 객체만을 남기고 다른 객체들은 Coolection에서 삭제한다. 변화가 있음-true
int size()			Collection 에 저장된 객체의 개수를 반환한다. 
Object[] toArray()		Collection 저장된 객체를 객체배열(Object[])로 반환한다. 
Object[] toArray(Object[] a)	지정된 배열에 Collection 의 객체를 저장해서 반환단다. )


List인터페이스
List인터페이스는 중복을 허용하면서 저장순서가 유지되는 컬렉션을 구현하는데 사용된다. 
		List
Vector		ArrayList	LinkedList
Stack

List인터페이스에 정의된 메서드는 다음과 같다
메서드					설명
void add(int index, Object element)	지정된 위치(Index)에 객체(element) 또는 컬렉션에 포함된 객체를 추가한다.
boolean addAll(int index, Collection c)
Object get(int index)			지정된 위치에 있는 객체를 반복한다. 
int indexOf(Object o)		지정된 객체의 위치(index)를 반환한다. 
int lastIndexOb(Object o)		지정된 ㅊ객체의 위치(index)를 반환한다. 
ListIterator	listiterator()		List의 객체에 접근할 수 있는 ListIterator를 반환한다. 
ListIterator	listIterator(int index)	
Object remove(int index)		지정된 위치에 있는 객체를 삭제하고 삭제된 객체를 반환한다. 
Object set(int index, Object element)	지정된 위치에 객체를 저장한다.
void sort(Comparator c)			지정된 비교자로 List를 정렬한다. 
List subList(int fromIndex, int toIndex)	지정된 범휘에 있는 객체를 반환한다. 

Set인터페이스
		Set
Hashset		SortedSet
		TreeSet

Map 인터페이스
Mat 인터페이스는 키와 값을 하나의 쌍으로 묶어서 저장하는 컬렉션 클래스를 구현하는 데 사용된다.
		Map
Hashtable	HashMap		SortedMap
		LinkedHashMap	TreeMap

메서드					설명
void clear()				Map의 모든 객체를 삭제한다. 
boolean containsKey(Object key)		지정된 key객체와 일치하는 Map의 Key객체가있는지 확인한다. 
boolean containsValue(Object value)	지정된 value객체와 일치하는 Map의 value객체가 있는지 확인한다. 
Set entrySet()				Map에 저장되어 있는 key-value쌍을 Map,Entry타입의 객체로 지정한 Set으로 반환한다. 
boolean equals(Object o)		동일한 ㅡMap인지 비교한다. 
Object get(Object key)			지정된 key객체에 대응하는 value객체를 찾아서 반환한다. 
int hashCode()				해시코드를 반환한다.
boolean isEmpty()			Map이 비어있는지 확인한다. 
Set keySet()				Map에 저장된 모든 key객체를 반환한다. 
Object put(Object key, Object value)	Map에 value객체를 key객체에 연결(mapping)하여 저장한다. 
void putAll(Map t)			지정된 Map의 모든 key-value쌍을 추가한다. 
Object remove(Object key)		지정된 key객체와 일치하는 key-value객체를 삭제한다. 
int size()				Map에 지정된 key-value쌍의 개수를 반환한다. 
Collection values()			Map에 저장된 모든 value객체를 반환한다. 

Map.Entry인터페이스
Map.Entry인터페이스는 Map이터페이스의 내부 인터페이스이다. 
